AWSTemplateFormatVersion: 2010-09-09
Description: The AWS CloudFormation template for this Serverless application
Resources:
  ServerlessDeploymentBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  ServerlessDeploymentBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ServerlessDeploymentBucket
      PolicyDocument:
        Statement:
          - Action: 's3:*'
            Effect: Deny
            Principal: '*'
            Resource:
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':s3:::'
                  - !Ref ServerlessDeploymentBucket
                  - /*
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':s3:::'
                  - !Ref ServerlessDeploymentBucket
            Condition:
              Bool:
                'aws:SecureTransport': false
  StartLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: /aws/lambda/puppeteerwithlambda-dev-start
  IamRoleLambdaExecution:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Join 
            - '-'
            - - puppeteerwithlambda
              - dev
              - lambda
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:TagResource'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/puppeteerwithlambda-dev*:*
              - Effect: Allow
                Action:
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/puppeteerwithlambda-dev*:*:*
      Path: /
      RoleName: !Join 
        - '-'
        - - puppeteerwithlambda
          - dev
          - !Ref 'AWS::Region'
          - lambdaRole
  StartLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref ServerlessDeploymentBucket
        S3Key: >-
          serverless/puppeteerwithlambda/dev/1681179149470-2023-04-11T02:12:29.470Z/puppeteerwithlambda.zip
      Handler: src/index.handler
      Runtime: nodejs12.x
      FunctionName: puppeteerwithlambda-dev-start
      MemorySize: 512
      Timeout: 30
      Role: !GetAtt 
        - IamRoleLambdaExecution
        - Arn
    DependsOn:
      - StartLogGroup
  StartLambdaVersionmltkQu533cdbmXfCccJLwMdBZcTp8D2uoWixwKxm6WE:
    Type: 'AWS::Lambda::Version'
    DeletionPolicy: Retain
    Properties:
      FunctionName: !Ref StartLambdaFunction
      CodeSha256: XnxjAW6gN1VWdJOihM12dDmKLFf9sw4S6DNg4avA/JE=
  ApiGatewayRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: dev-puppeteerwithlambda
      EndpointConfiguration:
        Types:
          - EDGE
      Policy: ''
  ApiGatewayResourceStart:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt 
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: start
      RestApiId: !Ref ApiGatewayRestApi
  ApiGatewayResourceStartIdVar:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref ApiGatewayResourceStart
      PathPart: '{id}'
      RestApiId: !Ref ApiGatewayRestApi
  ApiGatewayMethodStartIdVarGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: GET
      RequestParameters: {}
      ResourceId: !Ref ApiGatewayResourceStartIdVar
      RestApiId: !Ref ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join 
          - ''
          - - 'arn:'
            - !Ref 'AWS::Partition'
            - ':apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !GetAtt 
              - StartLambdaFunction
              - Arn
            - /invocations
      MethodResponses: []
    DependsOn:
      - StartLambdaPermissionApiGateway
  ApiGatewayDeployment1681179146184:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: dev
    DependsOn:
      - ApiGatewayMethodStartIdVarGet
  StartLambdaPermissionApiGateway:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt 
        - StartLambdaFunction
        - Arn
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Join 
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':'
          - !Ref ApiGatewayRestApi
          - /*/*
Outputs:
  ServerlessDeploymentBucketName:
    Value: !Ref ServerlessDeploymentBucket
    Export:
      Name: sls-puppeteerwithlambda-dev-ServerlessDeploymentBucketName
  StartLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value: !Ref StartLambdaVersionmltkQu533cdbmXfCccJLwMdBZcTp8D2uoWixwKxm6WE
    Export:
      Name: sls-puppeteerwithlambda-dev-StartLambdaFunctionQualifiedArn
  ServiceEndpoint:
    Description: URL of the service endpoint
    Value: !Join 
      - ''
      - - 'https://'
        - !Ref ApiGatewayRestApi
        - .execute-api.
        - !Ref 'AWS::Region'
        - .
        - !Ref 'AWS::URLSuffix'
        - /dev
    Export:
      Name: sls-puppeteerwithlambda-dev-ServiceEndpoint
